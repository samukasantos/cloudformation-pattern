AWSTemplateFormatVersion: 2010-09-09
Description: Application Load Balancer
Parameters:
  VpcStackName:
    Type: AWS::EC2::VPC::Id
  SubnetType:
    Type: String
    AllowedValues: [public, private]
    Default: public
  PublicSubnetA:
    Type: AWS::EC2::Subnet::Id
  PublicSubnetB:
    Type: AWS::EC2::Subnet::Id
  WebCidr:
    Type: String
    Default: 0.0.0.0/32
  Domain:
    Type: String
Resources:
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub "${AWS::StackName}"
      SecurityGroupEgress:
      - CidrIp: 0.0.0.0/0
        Description: allow all outgoing
        IpProtocol: '-1'
      SecurityGroupIngress:
      - CidrIp:
          Ref: WebCidr
        FromPort: '80'
        IpProtocol: tcp
        ToPort: '80'
      - CidrIp:
          Ref: WebCidr
        FromPort: '443'
        IpProtocol: tcp
        ToPort: '443'
      GroupName: !Sub "${AWS::StackName}"
      VpcId:
        !Ref VpcStackName
      Tags:
      - Key: Name
        Value:
          Ref: AWS::StackName
  SecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref SecurityGroup
      SourceSecurityGroupId: !GetAtt SecurityGroup.GroupId
      FromPort: '0'
      IpProtocol: tcp
      ToPort: '65535'
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
        Name: !Sub "${AWS::StackName}"
        Scheme: internet-facing
        SecurityGroups:
            - !Ref SecurityGroup
        Subnets:
          - !Ref PublicSubnetA
          - !Ref PublicSubnetB
  Certificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Sub "*.${Domain}"
      ValidationMethod: DNS
  HttpsListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: "fixed-response"
          FixedResponseConfig:
              ContentType: text/plain
              MessageBody: Not found
              StatusCode: 404
      LoadBalancerArn: !Ref LoadBalancer
      Port: 443
      Protocol: "HTTPS"
      Certificates:
      - !Ref Certificate
  HttpsRedirect:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: redirect
          RedirectConfig:
            Protocol: HTTPS
            Port: 443
            Host: "#{host}"
            Path: "/#{path}"
            Query: "#{query}"
            StatusCode: HTTP_301
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP
Outputs:
  Alb:
    Description: The ALB
    Value: !Ref LoadBalancer
    Export:
      Name: !Sub "${AWS::StackName}"
  SecurityGroup:
    Description: The ALB Security Group
    Value: !Ref SecurityGroup
    Export:
      Name: !Sub "${AWS::StackName}-security-group"
  Domain:
    Description: The ALB Domain
    Value: !Ref Domain
    Export:
      Name: !Sub "${AWS::StackName}-domain"
  HttpsListener:
    Description: The ALB HTTPS Listener
    Value: !Ref HttpsListener
    Export:
      Name: !Sub "${AWS::StackName}-listener"