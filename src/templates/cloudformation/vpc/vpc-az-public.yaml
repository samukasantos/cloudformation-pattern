AWSTemplateFormatVersion: '2010-09-09'
Description: 'VPC AZ Public'
Parameters:
  RegionAZName:
    Description: Availability Zone Name in Region
    Type: AWS::EC2::AvailabilityZone::Name
  PublicSubnetCidr:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.10.10.0/24
    Description: CIDR block for the public subnet in availability zone
    Type: String
  VpcStackName:
    Type: String
Resources:
  PublicSubnet:
    Properties:
      AvailabilityZone: !Ref RegionAZName
      CidrBlock: !Ref PublicSubnetCidr
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}
      VpcId:
        Fn::ImportValue: !Ref VpcStackName
    Type: AWS::EC2::Subnet
  PublicNetworkAcl:
    Properties:
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}
      VpcId:
        Fn::ImportValue: !Ref VpcStackName
    Type: AWS::EC2::NetworkAcl
  PublicNetworkAclEntryInAllowAll:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: false
      NetworkAclId: !Ref PublicNetworkAcl
      Protocol: -1
      RuleAction: allow
      RuleNumber: 99
  PublicNetworkAclEntryOutAllowAll:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: true
      NetworkAclId: !Ref PublicNetworkAcl
      Protocol: -1
      RuleAction: allow
      RuleNumber: 99
  PublicSubnetNetworkAclAssociation:
    Properties:
      NetworkAclId: !Ref PublicNetworkAcl
      SubnetId: !Ref PublicSubnet
    Type: AWS::EC2::SubnetNetworkAclAssociation
  PublicRouteTable:
    Properties:
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}
      VpcId:
        Fn::ImportValue: !Ref VpcStackName
    Type: AWS::EC2::RouteTable
  PublicRouteTableInternetRoute:
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Fn::ImportValue: !Sub "${VpcStackName}-igw"
      RouteTableId: !Ref PublicRouteTable
    Type: AWS::EC2::Route
  PublicRouteTableAssociation:
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet
    Type: AWS::EC2::SubnetRouteTableAssociation
Outputs:
  PublicSubnet:
    Description: The public subnet
    Value: !Ref PublicSubnet
    Export:
      Name: !Sub "${AWS::StackName}"
  PublicSubnetCidr:
    Description: The public subnet cidr
    Value: !Ref PublicSubnetCidr
    Export:
      Name: !Sub "${AWS::StackName}-cidr"